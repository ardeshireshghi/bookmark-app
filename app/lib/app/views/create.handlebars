<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!-- This is an automatically generated file.
  It will be read and overwritten.
  Do Not Edit! -->
  <title>Ardi Bookmarks</title>
  <style type="text/css">

  section {
      max-width: 1000px;
      width: 90%;
      margin: 0 auto;
  }

  label {
      font-family: Arial;
      font-size: 1.2rem;
  }

  h1 {
      text-align: center;
      font-family: Arial;
      text-transform: uppercase;
      color: rgba(51, 51, 51, 0.59);
      margin: 20px;
      font-weight: 300;
      font-size: 3rem;
  }

  legend {
      text-align: center;
      margin: 0;
      padding: 0;
      margin: 0 auto;
      font-family: Arial;
      font-size: 2rem;
  }

  div a {
      font-family: Arial;
      font-size: .9em;
      color: #3E88DA;
      font-weight: 700;
      line-height: 20px;
      vertical-align: middle;
      display: inline-block;
  }

  span {
      font-family: Arial;
      display: block;
      font-size: .8rem;
      margin: 10px 0;
      width: 100%;
      line-height: 18px;
  }

  input[type="text"] {
      background: transparent;
      border: none;
      border-bottom: 1px solid rgba(170, 170, 170, 0.48);
      width: 100%;
      margin-bottom: 20px;
      font-size: 1.2rem;
      font-weight: 300;
      font-family: Arial;
      color: #777;
      padding: 10px;
      outline: 0;
      padding-left: 0;
  }

  button {
      border: 0;
      display: inline-block;
      padding: 30px 30px;
      color: white;
      background-color: #3E88DA ;
      font-size: 1.3rem;
      cursor: pointer;
      transition: opacity .25s;
      outline: 0;
  }

  .link__cancel {
    font-size: 1.3rem;
    margin-left: 10px;
  }

  button:hover {
    opacity: .7;
  }

  @media screen and (min-width:769px) {
   input[type="text"] {
    font-size: 2.2rem;
    }
  }

  .form-control {
    margin: 20px;
  }
  .form-action {
    text-align: center;
  }

  section.success,
  section.error {
      font-family: Arial;
      font-size: 2rem;
      color: #B8B9BD;
      text-align: center;
      margin-top: 40px;
      padding: 40px;
      background-color: rgba(255, 255, 255, 0);
      width: 80%;
      display:  none;
  }

  section.error {
    color: #B25E5E;
  }

  </style>

</head>
<body style="background-color: #f8f8f8;">
  <h1>Ardi Bookmarks</h1>
  <section class="">
  <form name="bookmark-create" id="bookmark-create" method="POST">
      <legend>Add new bookmark</legend>
      <div class="form-control">
        <label for="href">URL</label>
        <input type="text" name="href" placeholder="link to the bookmark..."></input>
      </div>
      <div class="form-control">
        <label for="title">Title</label>
        <input type="text" name="title" placeholder="bookmark title..."></input>
      </div>
      <div class="form-control">
        <label for="description">Description</label>
        <input type="text" name="description" placeholder="bookmark desciption..."></input>
      </div>
      <div class="form-control">
        <label for="tags">Tags</label>
        <input type="text" name="tags" placeholder="bookmark tags..."></input>
      </div>
      <div class="form-action">
        <button type="submit">Add bookmark</button>
        <a class="link__cancel" href='/'>Cancel</a>
      </div>
  </form>
  </section>
  <section class="success">Nice! Bookmarks added successfully! <a href="/">Go back</a></section>
  <section class="error">Oops! There was a problem adding your bookmark! <a href="/">Go back</a></section>

  <script type="text/javascript">
    ;(function(root) {
      var BOOKMARK_FORM_ID = 'bookmark-create';
      var bookmarkFormEl = document.forms.namedItem(BOOKMARK_FORM_ID);

      function animateScrollToEl(targetEl, duration, easing) {
        var easings = {
          easeInOutExpo: function (t, b, c, d) {
            t /= d/2;
            if (t < 1) return c/2 * Math.pow( 2, 10 * (t - 1) ) + b;
            t--;
            return c/2 * ( -Math.pow( 2, -10 * t) + 2 ) + b;
          }
        };

        var pageScrollYOffset= function() {
          return Math.max(
            window.pageYOffset,
            document.documentElement.scrollTop,
            document.body.scrollTop);
        };

        var requestAnimFrame = window.requestAnimationFrame    ||
                            window.webkitRequestAnimationFrame ||
                            window.mozRequestAnimationFrame    ||
                            window.oRequestAnimationFrame      ||
                            window.msRequestAnimationFrame     ||
                            function(callback) {
                              setTimeout(callback, 1000 / 60);
                            };

        duration = duration || 300;
        easing = easing || 'easeInOutExpo';

        var initialScrollTop = pageScrollYOffset();
        var targetElOffsetTop = initialScrollTop + targetEl.getBoundingClientRect().top;
        var offsetDiff = targetElOffsetTop - initialScrollTop;
        var timeElapsed = 0;
        var startTime = Date.now();

        var animate = function() {
          timeElapsed = Date.now() - startTime;
          var currentScrollTop = easings[easing](timeElapsed, initialScrollTop, offsetDiff, duration);

          if (timeElapsed <= duration) {
            window.scrollTo(0, currentScrollTop);
            requestAnimFrame(animate);
          }
        };

        requestAnimFrame(animate);
      }

      function showError(message) {
        var errorMessageEl = document.querySelector('.error');
        var successMessageEl = document.querySelector('.success');

        message = message || 'Oops! There was a problem adding your bookmark!';

        errorMessageEl.textContent = message;
        errorMessageEl.style.display = 'block';
        successMessageEl.style.display = 'none';
        animateScrollToEl(errorMessageEl, 500);
      }

      function showSuccess() {
        var errorMessageEl = document.querySelector('.error');
        var successMessageEl = document.querySelector('.success');

        successMessageEl.style.display = 'block';
        errorMessageEl.style.display = 'none';
        animateScrollToEl(successMessageEl, 500);
      }

      function submitHandler(event) {
        if (event.preventDefault) {
          event.preventDefault()
        } else {
          event.returnValue = false;
        }

        var req = new XMLHttpRequest();
        var bookmarkData = getBookmarkFormData();

        // Simple validation
        if (bookmarkData.href === '') {
          showError('Bookmark URL can not be empty');
          return;
        }

        // Send data
        req.open('POST', 'api/bookmark', true);
        req.setRequestHeader('Content-Type', 'application/json');
        req.onreadystatechange = function () {
          if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {
            showSuccess();
          } else if(this.readyState === XMLHttpRequest.DONE && this.status !== 200) {
            console.log('There was an error saving the bookmark', this);
            showError();
          }
        };

        req.send(JSON.stringify(bookmarkData));
      }

      function getBookmarkFormData() {
        var jsonData = {};
        var formFields = Array.prototype.slice.call(bookmarkFormEl.elements);

        formFields.forEach(function(fieldEl) {
          jsonData[fieldEl.name]  = (fieldEl.name === 'tags') ? fieldEl.value.split(',') : fieldEl.value;
        });
        return jsonData;
      }

      function init() {
        bookmarkFormEl.onsubmit = submitHandler;
      }

      init();

    })(window);
  </script>
  </body>
</html>
